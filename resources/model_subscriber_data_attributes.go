/*
User storage service

User storage service for recovery flow

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SubscriberDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriberDataAttributes{}

// SubscriberDataAttributes struct for SubscriberDataAttributes
type SubscriberDataAttributes struct {
	// User ID UUID
	UserId string `json:"user_id"`
	// Plan ID object ID
	PlanId string `json:"plan_id"`
	// Streak months
	StreakMonths int32 `json:"streak_months"`
	// Status
	Status string `json:"status"`
	// Start at
	StartAt time.Time `json:"start_at"`
	// End at
	EndAt time.Time `json:"end_at"`
	// Updated at
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// Created at
	CreatedAt time.Time `json:"created_at"`
}

type _SubscriberDataAttributes SubscriberDataAttributes

// NewSubscriberDataAttributes instantiates a new SubscriberDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriberDataAttributes(userId string, planId string, streakMonths int32, status string, startAt time.Time, endAt time.Time, createdAt time.Time) *SubscriberDataAttributes {
	this := SubscriberDataAttributes{}
	this.UserId = userId
	this.PlanId = planId
	this.StreakMonths = streakMonths
	this.Status = status
	this.StartAt = startAt
	this.EndAt = endAt
	this.CreatedAt = createdAt
	return &this
}

// NewSubscriberDataAttributesWithDefaults instantiates a new SubscriberDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriberDataAttributesWithDefaults() *SubscriberDataAttributes {
	this := SubscriberDataAttributes{}
	return &this
}

// GetUserId returns the UserId field value
func (o *SubscriberDataAttributes) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *SubscriberDataAttributes) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *SubscriberDataAttributes) SetUserId(v string) {
	o.UserId = v
}

// GetPlanId returns the PlanId field value
func (o *SubscriberDataAttributes) GetPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *SubscriberDataAttributes) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanId, true
}

// SetPlanId sets field value
func (o *SubscriberDataAttributes) SetPlanId(v string) {
	o.PlanId = v
}

// GetStreakMonths returns the StreakMonths field value
func (o *SubscriberDataAttributes) GetStreakMonths() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StreakMonths
}

// GetStreakMonthsOk returns a tuple with the StreakMonths field value
// and a boolean to check if the value has been set.
func (o *SubscriberDataAttributes) GetStreakMonthsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StreakMonths, true
}

// SetStreakMonths sets field value
func (o *SubscriberDataAttributes) SetStreakMonths(v int32) {
	o.StreakMonths = v
}

// GetStatus returns the Status field value
func (o *SubscriberDataAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SubscriberDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SubscriberDataAttributes) SetStatus(v string) {
	o.Status = v
}

// GetStartAt returns the StartAt field value
func (o *SubscriberDataAttributes) GetStartAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value
// and a boolean to check if the value has been set.
func (o *SubscriberDataAttributes) GetStartAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartAt, true
}

// SetStartAt sets field value
func (o *SubscriberDataAttributes) SetStartAt(v time.Time) {
	o.StartAt = v
}

// GetEndAt returns the EndAt field value
func (o *SubscriberDataAttributes) GetEndAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value
// and a boolean to check if the value has been set.
func (o *SubscriberDataAttributes) GetEndAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndAt, true
}

// SetEndAt sets field value
func (o *SubscriberDataAttributes) SetEndAt(v time.Time) {
	o.EndAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SubscriberDataAttributes) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberDataAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SubscriberDataAttributes) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *SubscriberDataAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SubscriberDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SubscriberDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SubscriberDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o SubscriberDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriberDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	toSerialize["plan_id"] = o.PlanId
	toSerialize["streak_months"] = o.StreakMonths
	toSerialize["status"] = o.Status
	toSerialize["start_at"] = o.StartAt
	toSerialize["end_at"] = o.EndAt
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *SubscriberDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_id",
		"plan_id",
		"streak_months",
		"status",
		"start_at",
		"end_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriberDataAttributes := _SubscriberDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubscriberDataAttributes)

	if err != nil {
		return err
	}

	*o = SubscriberDataAttributes(varSubscriberDataAttributes)

	return err
}

type NullableSubscriberDataAttributes struct {
	value *SubscriberDataAttributes
	isSet bool
}

func (v NullableSubscriberDataAttributes) Get() *SubscriberDataAttributes {
	return v.value
}

func (v *NullableSubscriberDataAttributes) Set(val *SubscriberDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriberDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriberDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriberDataAttributes(val *SubscriberDataAttributes) *NullableSubscriberDataAttributes {
	return &NullableSubscriberDataAttributes{value: val, isSet: true}
}

func (v NullableSubscriberDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriberDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


