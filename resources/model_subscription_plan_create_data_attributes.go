/*
User storage service

User storage service for recovery flow

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SubscriptionPlanCreateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPlanCreateDataAttributes{}

// SubscriptionPlanCreateDataAttributes struct for SubscriptionPlanCreateDataAttributes
type SubscriptionPlanCreateDataAttributes struct {
	// Subscription Plan ID
	TypeId string `json:"type_id"`
	// Name
	Name string `json:"name"`
	// Description
	Desc string `json:"desc"`
	// Price
	Price float32 `json:"price"`
	// Currency
	Currency string `json:"currency"`
	// Subscription Plan Billing Interval
	BillingCycle string `json:"billing_cycle"`
	// Subscription Plan Billing Interval
	BillingInterval int32 `json:"billing_interval"`
	// Status
	Status string `json:"status"`
}

type _SubscriptionPlanCreateDataAttributes SubscriptionPlanCreateDataAttributes

// NewSubscriptionPlanCreateDataAttributes instantiates a new SubscriptionPlanCreateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPlanCreateDataAttributes(typeId string, name string, desc string, price float32, currency string, billingCycle string, billingInterval int32, status string) *SubscriptionPlanCreateDataAttributes {
	this := SubscriptionPlanCreateDataAttributes{}
	this.TypeId = typeId
	this.Name = name
	this.Desc = desc
	this.Price = price
	this.Currency = currency
	this.BillingCycle = billingCycle
	this.BillingInterval = billingInterval
	this.Status = status
	return &this
}

// NewSubscriptionPlanCreateDataAttributesWithDefaults instantiates a new SubscriptionPlanCreateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPlanCreateDataAttributesWithDefaults() *SubscriptionPlanCreateDataAttributes {
	this := SubscriptionPlanCreateDataAttributes{}
	return &this
}

// GetTypeId returns the TypeId field value
func (o *SubscriptionPlanCreateDataAttributes) GetTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlanCreateDataAttributes) GetTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *SubscriptionPlanCreateDataAttributes) SetTypeId(v string) {
	o.TypeId = v
}

// GetName returns the Name field value
func (o *SubscriptionPlanCreateDataAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlanCreateDataAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SubscriptionPlanCreateDataAttributes) SetName(v string) {
	o.Name = v
}

// GetDesc returns the Desc field value
func (o *SubscriptionPlanCreateDataAttributes) GetDesc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Desc
}

// GetDescOk returns a tuple with the Desc field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlanCreateDataAttributes) GetDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Desc, true
}

// SetDesc sets field value
func (o *SubscriptionPlanCreateDataAttributes) SetDesc(v string) {
	o.Desc = v
}

// GetPrice returns the Price field value
func (o *SubscriptionPlanCreateDataAttributes) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlanCreateDataAttributes) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *SubscriptionPlanCreateDataAttributes) SetPrice(v float32) {
	o.Price = v
}

// GetCurrency returns the Currency field value
func (o *SubscriptionPlanCreateDataAttributes) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlanCreateDataAttributes) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *SubscriptionPlanCreateDataAttributes) SetCurrency(v string) {
	o.Currency = v
}

// GetBillingCycle returns the BillingCycle field value
func (o *SubscriptionPlanCreateDataAttributes) GetBillingCycle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingCycle
}

// GetBillingCycleOk returns a tuple with the BillingCycle field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlanCreateDataAttributes) GetBillingCycleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingCycle, true
}

// SetBillingCycle sets field value
func (o *SubscriptionPlanCreateDataAttributes) SetBillingCycle(v string) {
	o.BillingCycle = v
}

// GetBillingInterval returns the BillingInterval field value
func (o *SubscriptionPlanCreateDataAttributes) GetBillingInterval() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BillingInterval
}

// GetBillingIntervalOk returns a tuple with the BillingInterval field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlanCreateDataAttributes) GetBillingIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingInterval, true
}

// SetBillingInterval sets field value
func (o *SubscriptionPlanCreateDataAttributes) SetBillingInterval(v int32) {
	o.BillingInterval = v
}

// GetStatus returns the Status field value
func (o *SubscriptionPlanCreateDataAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPlanCreateDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SubscriptionPlanCreateDataAttributes) SetStatus(v string) {
	o.Status = v
}

func (o SubscriptionPlanCreateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPlanCreateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type_id"] = o.TypeId
	toSerialize["name"] = o.Name
	toSerialize["desc"] = o.Desc
	toSerialize["price"] = o.Price
	toSerialize["currency"] = o.Currency
	toSerialize["billing_cycle"] = o.BillingCycle
	toSerialize["billing_interval"] = o.BillingInterval
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *SubscriptionPlanCreateDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type_id",
		"name",
		"desc",
		"price",
		"currency",
		"billing_cycle",
		"billing_interval",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriptionPlanCreateDataAttributes := _SubscriptionPlanCreateDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubscriptionPlanCreateDataAttributes)

	if err != nil {
		return err
	}

	*o = SubscriptionPlanCreateDataAttributes(varSubscriptionPlanCreateDataAttributes)

	return err
}

type NullableSubscriptionPlanCreateDataAttributes struct {
	value *SubscriptionPlanCreateDataAttributes
	isSet bool
}

func (v NullableSubscriptionPlanCreateDataAttributes) Get() *SubscriptionPlanCreateDataAttributes {
	return v.value
}

func (v *NullableSubscriptionPlanCreateDataAttributes) Set(val *SubscriptionPlanCreateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPlanCreateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPlanCreateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPlanCreateDataAttributes(val *SubscriptionPlanCreateDataAttributes) *NullableSubscriptionPlanCreateDataAttributes {
	return &NullableSubscriptionPlanCreateDataAttributes{value: val, isSet: true}
}

func (v NullableSubscriptionPlanCreateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPlanCreateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


