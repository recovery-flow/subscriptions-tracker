/*
User storage service

User storage service for recovery flow

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the BillingScheduleUpdateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingScheduleUpdateDataAttributes{}

// BillingScheduleUpdateDataAttributes struct for BillingScheduleUpdateDataAttributes
type BillingScheduleUpdateDataAttributes struct {
	// User ID
	UserId string `json:"user_id"`
	// Billing Schedule Date
	SchedulesDate time.Time `json:"schedules_date"`
	// Billing Schedule Attempted Date
	AttemptedDate *time.Time `json:"attempted_date,omitempty"`
	// Billing Schedule Status
	Status string `json:"status"`
	// Billing Schedule Updated At
	UpdatedAt time.Time `json:"updated_at"`
	// Billing Schedule Created At
	CreatedAt time.Time `json:"created_at"`
}

type _BillingScheduleUpdateDataAttributes BillingScheduleUpdateDataAttributes

// NewBillingScheduleUpdateDataAttributes instantiates a new BillingScheduleUpdateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingScheduleUpdateDataAttributes(userId string, schedulesDate time.Time, status string, updatedAt time.Time, createdAt time.Time) *BillingScheduleUpdateDataAttributes {
	this := BillingScheduleUpdateDataAttributes{}
	this.UserId = userId
	this.SchedulesDate = schedulesDate
	this.Status = status
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewBillingScheduleUpdateDataAttributesWithDefaults instantiates a new BillingScheduleUpdateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingScheduleUpdateDataAttributesWithDefaults() *BillingScheduleUpdateDataAttributes {
	this := BillingScheduleUpdateDataAttributes{}
	return &this
}

// GetUserId returns the UserId field value
func (o *BillingScheduleUpdateDataAttributes) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *BillingScheduleUpdateDataAttributes) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *BillingScheduleUpdateDataAttributes) SetUserId(v string) {
	o.UserId = v
}

// GetSchedulesDate returns the SchedulesDate field value
func (o *BillingScheduleUpdateDataAttributes) GetSchedulesDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.SchedulesDate
}

// GetSchedulesDateOk returns a tuple with the SchedulesDate field value
// and a boolean to check if the value has been set.
func (o *BillingScheduleUpdateDataAttributes) GetSchedulesDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchedulesDate, true
}

// SetSchedulesDate sets field value
func (o *BillingScheduleUpdateDataAttributes) SetSchedulesDate(v time.Time) {
	o.SchedulesDate = v
}

// GetAttemptedDate returns the AttemptedDate field value if set, zero value otherwise.
func (o *BillingScheduleUpdateDataAttributes) GetAttemptedDate() time.Time {
	if o == nil || IsNil(o.AttemptedDate) {
		var ret time.Time
		return ret
	}
	return *o.AttemptedDate
}

// GetAttemptedDateOk returns a tuple with the AttemptedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingScheduleUpdateDataAttributes) GetAttemptedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AttemptedDate) {
		return nil, false
	}
	return o.AttemptedDate, true
}

// HasAttemptedDate returns a boolean if a field has been set.
func (o *BillingScheduleUpdateDataAttributes) HasAttemptedDate() bool {
	if o != nil && !IsNil(o.AttemptedDate) {
		return true
	}

	return false
}

// SetAttemptedDate gets a reference to the given time.Time and assigns it to the AttemptedDate field.
func (o *BillingScheduleUpdateDataAttributes) SetAttemptedDate(v time.Time) {
	o.AttemptedDate = &v
}

// GetStatus returns the Status field value
func (o *BillingScheduleUpdateDataAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BillingScheduleUpdateDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BillingScheduleUpdateDataAttributes) SetStatus(v string) {
	o.Status = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BillingScheduleUpdateDataAttributes) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingScheduleUpdateDataAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BillingScheduleUpdateDataAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BillingScheduleUpdateDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingScheduleUpdateDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BillingScheduleUpdateDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o BillingScheduleUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingScheduleUpdateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	toSerialize["schedules_date"] = o.SchedulesDate
	if !IsNil(o.AttemptedDate) {
		toSerialize["attempted_date"] = o.AttemptedDate
	}
	toSerialize["status"] = o.Status
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *BillingScheduleUpdateDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_id",
		"schedules_date",
		"status",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingScheduleUpdateDataAttributes := _BillingScheduleUpdateDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingScheduleUpdateDataAttributes)

	if err != nil {
		return err
	}

	*o = BillingScheduleUpdateDataAttributes(varBillingScheduleUpdateDataAttributes)

	return err
}

type NullableBillingScheduleUpdateDataAttributes struct {
	value *BillingScheduleUpdateDataAttributes
	isSet bool
}

func (v NullableBillingScheduleUpdateDataAttributes) Get() *BillingScheduleUpdateDataAttributes {
	return v.value
}

func (v *NullableBillingScheduleUpdateDataAttributes) Set(val *BillingScheduleUpdateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingScheduleUpdateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingScheduleUpdateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingScheduleUpdateDataAttributes(val *BillingScheduleUpdateDataAttributes) *NullableBillingScheduleUpdateDataAttributes {
	return &NullableBillingScheduleUpdateDataAttributes{value: val, isSet: true}
}

func (v NullableBillingScheduleUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingScheduleUpdateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


