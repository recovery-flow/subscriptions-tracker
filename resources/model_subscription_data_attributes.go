/*
User storage service

User storage service for recovery flow

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SubscriptionDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionDataAttributes{}

// SubscriptionDataAttributes struct for SubscriptionDataAttributes
type SubscriptionDataAttributes struct {
	// Plan ID
	PlanId string `json:"plan_id"`
	// Payment Method ID
	PaymentMethodId string `json:"payment_method_id"`
	// State
	Status string `json:"status"`
	// Availability
	Availability string `json:"availability"`
	// Start at
	StartAt *time.Time `json:"start_at,omitempty"`
	// Updated at
	UpdatedAt time.Time `json:"updated_at"`
	// Created at
	CreatedAt time.Time `json:"created_at"`
}

type _SubscriptionDataAttributes SubscriptionDataAttributes

// NewSubscriptionDataAttributes instantiates a new SubscriptionDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionDataAttributes(planId string, paymentMethodId string, status string, availability string, updatedAt time.Time, createdAt time.Time) *SubscriptionDataAttributes {
	this := SubscriptionDataAttributes{}
	this.PlanId = planId
	this.PaymentMethodId = paymentMethodId
	this.Status = status
	this.Availability = availability
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewSubscriptionDataAttributesWithDefaults instantiates a new SubscriptionDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionDataAttributesWithDefaults() *SubscriptionDataAttributes {
	this := SubscriptionDataAttributes{}
	return &this
}

// GetPlanId returns the PlanId field value
func (o *SubscriptionDataAttributes) GetPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionDataAttributes) GetPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanId, true
}

// SetPlanId sets field value
func (o *SubscriptionDataAttributes) SetPlanId(v string) {
	o.PlanId = v
}

// GetPaymentMethodId returns the PaymentMethodId field value
func (o *SubscriptionDataAttributes) GetPaymentMethodId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentMethodId
}

// GetPaymentMethodIdOk returns a tuple with the PaymentMethodId field value
// and a boolean to check if the value has been set.
func (o *SubscriptionDataAttributes) GetPaymentMethodIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethodId, true
}

// SetPaymentMethodId sets field value
func (o *SubscriptionDataAttributes) SetPaymentMethodId(v string) {
	o.PaymentMethodId = v
}

// GetStatus returns the Status field value
func (o *SubscriptionDataAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SubscriptionDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SubscriptionDataAttributes) SetStatus(v string) {
	o.Status = v
}

// GetAvailability returns the Availability field value
func (o *SubscriptionDataAttributes) GetAvailability() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value
// and a boolean to check if the value has been set.
func (o *SubscriptionDataAttributes) GetAvailabilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Availability, true
}

// SetAvailability sets field value
func (o *SubscriptionDataAttributes) SetAvailability(v string) {
	o.Availability = v
}

// GetStartAt returns the StartAt field value if set, zero value otherwise.
func (o *SubscriptionDataAttributes) GetStartAt() time.Time {
	if o == nil || IsNil(o.StartAt) {
		var ret time.Time
		return ret
	}
	return *o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionDataAttributes) GetStartAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartAt) {
		return nil, false
	}
	return o.StartAt, true
}

// HasStartAt returns a boolean if a field has been set.
func (o *SubscriptionDataAttributes) HasStartAt() bool {
	if o != nil && !IsNil(o.StartAt) {
		return true
	}

	return false
}

// SetStartAt gets a reference to the given time.Time and assigns it to the StartAt field.
func (o *SubscriptionDataAttributes) SetStartAt(v time.Time) {
	o.StartAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SubscriptionDataAttributes) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SubscriptionDataAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SubscriptionDataAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SubscriptionDataAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SubscriptionDataAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SubscriptionDataAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o SubscriptionDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["plan_id"] = o.PlanId
	toSerialize["payment_method_id"] = o.PaymentMethodId
	toSerialize["status"] = o.Status
	toSerialize["availability"] = o.Availability
	if !IsNil(o.StartAt) {
		toSerialize["start_at"] = o.StartAt
	}
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *SubscriptionDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"plan_id",
		"payment_method_id",
		"status",
		"availability",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriptionDataAttributes := _SubscriptionDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubscriptionDataAttributes)

	if err != nil {
		return err
	}

	*o = SubscriptionDataAttributes(varSubscriptionDataAttributes)

	return err
}

type NullableSubscriptionDataAttributes struct {
	value *SubscriptionDataAttributes
	isSet bool
}

func (v NullableSubscriptionDataAttributes) Get() *SubscriptionDataAttributes {
	return v.value
}

func (v *NullableSubscriptionDataAttributes) Set(val *SubscriptionDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionDataAttributes(val *SubscriptionDataAttributes) *NullableSubscriptionDataAttributes {
	return &NullableSubscriptionDataAttributes{value: val, isSet: true}
}

func (v NullableSubscriptionDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


