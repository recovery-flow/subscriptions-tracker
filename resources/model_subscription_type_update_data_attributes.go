/*
User storage service

User storage service for recovery flow

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
)

// checks if the SubscriptionTypeUpdateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionTypeUpdateDataAttributes{}

// SubscriptionTypeUpdateDataAttributes struct for SubscriptionTypeUpdateDataAttributes
type SubscriptionTypeUpdateDataAttributes struct {
	// Name
	Name *string `json:"name,omitempty"`
	// Status
	Status *string `json:"status,omitempty"`
	// Updated At
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewSubscriptionTypeUpdateDataAttributes instantiates a new SubscriptionTypeUpdateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionTypeUpdateDataAttributes() *SubscriptionTypeUpdateDataAttributes {
	this := SubscriptionTypeUpdateDataAttributes{}
	return &this
}

// NewSubscriptionTypeUpdateDataAttributesWithDefaults instantiates a new SubscriptionTypeUpdateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionTypeUpdateDataAttributesWithDefaults() *SubscriptionTypeUpdateDataAttributes {
	this := SubscriptionTypeUpdateDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SubscriptionTypeUpdateDataAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionTypeUpdateDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SubscriptionTypeUpdateDataAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SubscriptionTypeUpdateDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SubscriptionTypeUpdateDataAttributes) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionTypeUpdateDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SubscriptionTypeUpdateDataAttributes) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SubscriptionTypeUpdateDataAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SubscriptionTypeUpdateDataAttributes) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionTypeUpdateDataAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SubscriptionTypeUpdateDataAttributes) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *SubscriptionTypeUpdateDataAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o SubscriptionTypeUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionTypeUpdateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableSubscriptionTypeUpdateDataAttributes struct {
	value *SubscriptionTypeUpdateDataAttributes
	isSet bool
}

func (v NullableSubscriptionTypeUpdateDataAttributes) Get() *SubscriptionTypeUpdateDataAttributes {
	return v.value
}

func (v *NullableSubscriptionTypeUpdateDataAttributes) Set(val *SubscriptionTypeUpdateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionTypeUpdateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionTypeUpdateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionTypeUpdateDataAttributes(val *SubscriptionTypeUpdateDataAttributes) *NullableSubscriptionTypeUpdateDataAttributes {
	return &NullableSubscriptionTypeUpdateDataAttributes{value: val, isSet: true}
}

func (v NullableSubscriptionTypeUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionTypeUpdateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


