/*
User storage service

User storage service for recovery flow

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentMethodCreateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodCreateDataAttributes{}

// PaymentMethodCreateDataAttributes struct for PaymentMethodCreateDataAttributes
type PaymentMethodCreateDataAttributes struct {
	Type string `json:"type"`
	// Provider token
	ProviderToken string `json:"provider_token"`
	// Is default
	IsDefault bool `json:"is_default"`
}

type _PaymentMethodCreateDataAttributes PaymentMethodCreateDataAttributes

// NewPaymentMethodCreateDataAttributes instantiates a new PaymentMethodCreateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodCreateDataAttributes(type_ string, providerToken string, isDefault bool) *PaymentMethodCreateDataAttributes {
	this := PaymentMethodCreateDataAttributes{}
	this.Type = type_
	this.ProviderToken = providerToken
	this.IsDefault = isDefault
	return &this
}

// NewPaymentMethodCreateDataAttributesWithDefaults instantiates a new PaymentMethodCreateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodCreateDataAttributesWithDefaults() *PaymentMethodCreateDataAttributes {
	this := PaymentMethodCreateDataAttributes{}
	return &this
}

// GetType returns the Type field value
func (o *PaymentMethodCreateDataAttributes) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCreateDataAttributes) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PaymentMethodCreateDataAttributes) SetType(v string) {
	o.Type = v
}

// GetProviderToken returns the ProviderToken field value
func (o *PaymentMethodCreateDataAttributes) GetProviderToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderToken
}

// GetProviderTokenOk returns a tuple with the ProviderToken field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCreateDataAttributes) GetProviderTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderToken, true
}

// SetProviderToken sets field value
func (o *PaymentMethodCreateDataAttributes) SetProviderToken(v string) {
	o.ProviderToken = v
}

// GetIsDefault returns the IsDefault field value
func (o *PaymentMethodCreateDataAttributes) GetIsDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCreateDataAttributes) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDefault, true
}

// SetIsDefault sets field value
func (o *PaymentMethodCreateDataAttributes) SetIsDefault(v bool) {
	o.IsDefault = v
}

func (o PaymentMethodCreateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodCreateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["provider_token"] = o.ProviderToken
	toSerialize["is_default"] = o.IsDefault
	return toSerialize, nil
}

func (o *PaymentMethodCreateDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"provider_token",
		"is_default",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentMethodCreateDataAttributes := _PaymentMethodCreateDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentMethodCreateDataAttributes)

	if err != nil {
		return err
	}

	*o = PaymentMethodCreateDataAttributes(varPaymentMethodCreateDataAttributes)

	return err
}

type NullablePaymentMethodCreateDataAttributes struct {
	value *PaymentMethodCreateDataAttributes
	isSet bool
}

func (v NullablePaymentMethodCreateDataAttributes) Get() *PaymentMethodCreateDataAttributes {
	return v.value
}

func (v *NullablePaymentMethodCreateDataAttributes) Set(val *PaymentMethodCreateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodCreateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodCreateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodCreateDataAttributes(val *PaymentMethodCreateDataAttributes) *NullablePaymentMethodCreateDataAttributes {
	return &NullablePaymentMethodCreateDataAttributes{value: val, isSet: true}
}

func (v NullablePaymentMethodCreateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodCreateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


